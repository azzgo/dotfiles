" /* vim: set ft=vim : */
" ==========================
" Core config for Vim/Neovim
" ==========================

" setting leader key
let mapleader=" "
let g:mapleader=" "

set updatetime=300
set timeoutlen=800

" syntax highlight
syntax on

" switch buffer not prompt saving
set hidden
set autowrite

" fily type detect
filetype on

" default encoding
set fileencodings=utf-8,gb2312,gb18030,gbk,ucs-bom,cp936,latin1
set encoding=UTF-8

" intent
set tabstop=2
set softtabstop=2
set shiftwidth=2
set autoindent
set smartindent
set expandtab
set list listchars=eol:¬,tab:▸\ ,trail:.,

" search highlight
set hlsearch
set incsearch

" line numbers
set number
set relativenumber

" show ruler
set ruler
" disable wrap
set nowrap

" show cmd on triggering
set showcmd

" always show statusline
set laststatus=2

" disable vi mode
set nocompatible
set backspace=indent,eol,start

" no backup file
set nobackup
set nowritebackup
set noswapfile

" quick save and quit
nnoremap <leader>w :w<CR>
nnoremap <leader>q :q<CR>

" netrw
nnoremap <leader>nn :E .<CR>
nnoremap <leader>nf :E %:p:h<CR>

" map Q to q for ex mode is not usable for me
map Q q

" cancal highlight keymap
nnoremap <leader><cr> :noh<CR>
" reset cmdheight=1
nnoremap <leader><esc> :set cmdheight=1<CR>

" bufferNavigate
nnoremap <silent> [b :bprevious<CR> 
nnoremap <silent> ]b :bnext<CR> 
nnoremap <silent> [B :bfirst<CR> 
nnoremap <silent> ]B :blast<CR> 
nnoremap <silent> [q :cprevious<CR> 
nnoremap <silent> ]q :cnext<CR> 
nnoremap <silent> [l :lprevious<CR> 
nnoremap <silent> ]l :lnext<CR> 

" tabs 
nnoremap <silent> <leader>nt :tabnew<CR> 
nnoremap <silent> [t :tabprevious<CR> 
nnoremap <silent> ]t :tabnext<CR>

" map alt + n -> tab n
nnoremap <A-1> 1gt
nnoremap <A-2> 2gt
nnoremap <A-3> 3gt
nnoremap <A-4> 4gt
nnoremap <A-5> 5gt

" emacs  like kemap in insert mode
inoremap <c-a> <home>
inoremap <c-e> <end>
inoremap <c-f> <right>
inoremap <c-b> <left>
cnoremap <c-a> <home>
cnoremap <c-b> <left>
cnoremap <c-e> <end>
" move line down/up
nnoremap <A-j> :m .+1<cr>==
nnoremap <A-k> :m .-2<cr>==
inoremap <A-j> <esc>:m .+1<cr>==gi
inoremap <A-k> <esc>:m .-2<cr>==gi
vnoremap <A-j> :m '>+1<cr>gv
vnoremap <A-k> :m '<-2<cr>gv

"better intent
vnoremap < <gv
vnoremap > >gv

" spell correct
iabbrev cosnt const¬

" wildmenu
if has('wildmenu')
  set wildmenu
  set wildoptions=pum,tagfile
endif

" .vimrc quick kemap source and edit
nnoremap <leader>ve :e $MYVIMRC<CR>
nnoremap <leader>vs :source $MYVIMRC<CR>

" open with current buffer workdir
nnoremap <expr><leader>ew ":e ".expand('%:h')

"============ netrw setting ==============

" tree style
let g:netrw_liststyle = 3

if executable("rg")
  set grepprg=rg\ --vimgrep\ --no-heading
  set grepformat=%f:%l:%c:%m,%f:%l:%m
endif

function! SourceIfExists(file)
  if filereadable(expand(a:file))
    exe 'source' a:file
  else
    " echom a:file . " not exist"
  endif
endfunction
