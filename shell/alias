#!/bin/bash

alias g='git'
alias ga='git add'
alias gc='git commit -v'
alias gcn='git commit -v --no-verify'
alias gca='git commit -v --amend --no-edit'
alias gup='git pull --rebase'
alias gp='git push'
alias gpn='git push --no-verify'
alias gst='git status'
alias grb="git rebase"
alias grbc="git rebase --continue"
alias grba="git rebase --abort"
alias gprp='git pull --rebase && git push'
alias gscf='g diff-tree --no-commit-id --name-only -r'
# quick navigation
alias ..='cd ..'
alias ...='cd ../..'
alias ....='cd ../../..'

alias lsa='ls -lah'
alias l='ls -lah'
alias ll='ls -alFh'
alias la='ls -lAh'

# Safety first
alias rm="rm -i"

function gcd() {
  if [[ -x  $(command -v fzf) ]];then
    folder=$(git worktree list | fzf)
    if [[ -n $folder ]];then
     cd $(echo $folder | awk '{print $1}')
    fi
  fi
}

function gco() {
  if [[ $# -gt 0 ]];then
    git checkout "$@"
  elif [[ -x  $(command -v fzf) ]];then
    local_branches=$(git branch --format='%(refname:short)')
    remote_branches=$(git branch -r --format='%(refname:lstrip=3)'| grep -v 'HEAD$')
    branches=$(echo -e "${local_branches}\n${remote_branches}" | sort | uniq | awk '{ print length, $0 }' | sort -n | cut -d' ' -f2-)
    if [[ -n $branches ]];then
      git checkout $(echo $branches | fzf --reverse)
    fi
  fi
}

if [[ -x $(command -v nvim) ]];then
  alias v='nvim'
  function ngc() {
    if [[ $# -gt 0 ]];then
      COMMIT_ID=$1;
      nvim -c 'DiffviewOpen '"$COMMIT_ID"'^!' 
    fi
  }
  function ngd() {
    if [[ $# -gt 0 ]];then
      REVISION=$1;
      nvim -c 'DiffviewOpen '"$REVISION"
    fi
  }
elif [[ -x  $(command -v vim) ]];then
  alias v='vim'
fi

if [[ -x $(command -v tmux) ]]; then
  alias tt='tmux'
fi

if [[ -x  $(command -v vim) ]];then
  alias vi='vim'
fi

if [[ -x $(command -v proxychains) ]];then
  alias pc="proxychains -q"
fi

# yazi alias
if [[ -x $(command -v yazi) ]];then
  function y() {
    local tmp="$(mktemp -t "yazi-cwd.XXXXXX")" cwd
    yazi "$@" --cwd-file="$tmp"
    IFS= read -r -d '' cwd < "$tmp"
    [ -n "$cwd" ] && [ "$cwd" != "$PWD" ] && builtin cd -- "$cwd"
    rm -f -- "$tmp"
  }
fi
